<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
    	  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  
-->
<library>

	<class name="lzEditCalendarEvent" extends="labelExplorerBox" labelid="815" allowDragging="false" 
		    x="$once{ parent.width/2 - 300 }" y="100" docking="true" resizeable="false" 
		    closable="true" width="600" height="480">
		    
		<attribute name="reminderTypeId" value="0" type="number" />
		
		<attribute name="dataElement" value="null" />
		
		<dataset name="eventDS" />
		    
		<handler name="oninit">
			canvas._loadingAll.hideContentOnly();
			var downloadurl = canvas.protocol + '://'+canvas.rtmphostlocal+':'+canvas.red5httpport
                               +canvas.httpRootKey+'services/CalendarService/getAppointmentReminderTypList?'
                               +'SID='+canvas.sessionId;
               
            this.getAppointmentReminderTypList.setAttribute("src",downloadurl);
            this.getAppointmentReminderTypList.doRequest();
            
            if ($debug) Debug.write("this.dataElement ",this.dataElement);
            
            this.eventDS.setData(this.dataElement.childNodes);
            
            if ($debug) Debug.write("this.eventDS ",this.eventDS);
            
            lz.Focus.setFocus(this._title, false);
		</handler>
		
		<handler name="onclose">
			canvas._loadingAll.hideLoading();
		</handler>
		
		<dataset name="getAppointmentReminderTypList" type="http" />
		
		<labelText name="_titleLabel" x="4" y="24" labelid="572" fontstyle="bold" /> 
			
		<customEdittext name="_title" x="100" y="24" datapath="local:classroot.eventDS:/title"
				text="$path{'text()'}" 
			width="$once{ parent.width-110 }" height="24" />
			
			
		<!-- Start Date / Time -->
		<labelText name="_dateTimeStartLabel" x="100" y="50" labelid="570" fontstyle="bold" />  
			
		<dateField name="_dateStart" y="50" x="146" width="104" datapath="local:classroot.eventDS:/start">
			<handler name="ondata" args="d">
				this.setAttribute("text",parseDateStringFromXmlString(d.childNodes[0].data));
			</handler>
		</dateField>
			
		<customEdittext name="_timeStart" x="270" 
      					y="50" width="50" regexpType="time" text="08:00" datapath="local:classroot.eventDS:/start">
      		<handler name="ondata" args="d">
				this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
			</handler>
      	</customEdittext>
      					
      	<!-- End Date / Time -->			
		<labelText name="_dateTimeEndLabel" x="326" y="50" labelid="571" fontstyle="bold" />  
			
		<dateField name="_dateEnd" y="50" x="372" width="104" datapath="local:classroot.eventDS:/end">
			<handler name="ondata" args="d">
				this.setAttribute("text",parseDateStringFromXmlString(d.childNodes[0].data));
			</handler>
		</dateField>
			
		<customEdittext name="_timeEnd" x="496" 
      					y="50" width="50" regexpType="time" text="10:00" datapath="local:classroot.eventDS:/end">
      		<handler name="ondata" args="d">
				this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
			</handler>
      	</customEdittext>
      					
        <!-- Remindertype -->
		<labelText name="_reminderTypeLabel" x="4" y="76" labelid="565" fontstyle="bold" /> 
		
		<resetCombobox name="_reminderType" x="100" width="$once{ parent.width-110 }"
			 			  editable="false" shownitems="5" y="76" >
			<handler name="onvalue" args="v">						
				if ($debug) Debug.write("reminderTypeId: ",parent.reminderTypeId);
				if(this.getValue == 0 ) {
					parent.preminderTypeId = null;
				} else{
  					parent.reminderTypeId = this.getValue();												
  					if ($debug) Debug.write("reminderTypeId: ",parent.reminderTypeId);
				}
			</handler> 
			<handler name="ondata" args="remindtype">
				if ($debug) Debug.write("remindtype ondata: ", remindtype);
				var remTypeId = Number(remindtype.attributes.value);
				if (remTypeId > 0) {
					parent.reminderTypeId = remTypeId;
				    this.selectItem(remTypeId);
			    }
			</handler>
			<textlistitem datapath="local:classroot.getAppointmentReminderTypList:/getAppointmentReminderTypListResponse/return"
				text="$path{'name/text()'}" value="$path{'typId/text()'}">
				<handler name="ondata" args="d">
					//if ($debug) Debug.write("ondata combobox ",parent);
					parent.selectItemAt(2);
				</handler>
			</textlistitem>
	 	</resetCombobox> 
	 	
	 	<!-- Roomtype -->
		<labelText name="_roomTypeLabel" x="4" y="102" labelid="619" fontstyle="bold" /> 
		
		<resetCombobox name="_roomType" width="$once{ parent.width-110 }" y="102" x="100" editable="false" fontsize="11">
	        <handler name="oninit" >
	            <![CDATA[
	            for (var i=0;i<canvas.roomTypesInitValues.length;i++){
	                this.addItem(canvas.roomTypesInitValues[i].name,canvas.roomTypesInitValues[i].roomtypes_id);
	            }
	            this.selectItem(String(canvas.roomTypesInitValues[0].roomtypes_id));
	            ]]>
	        </handler> 
        </resetCombobox> 
	 	
	 	<!-- password protected -->
		<labelCheckbox name="_ispasswordProtected" y="128" fontsize="11" x="10" labelid="524"
				datapath="local:classroot.eventDS:/isPasswordProtected">
			<handler name="ondata" args="d">
				//if ($debug) Debug.write("ondata _ispasswordProtected ",d.childNodes[0].data);
				if (d.childNodes[0].data == "true") {
					this.setValue(true);
				} else {
					this.setValue(false);
				}
			</handler>
		</labelCheckbox>
			
		<!-- password -->
		<labelText labelid="525" y="154" x="4" fontstyle="bold" 
				fgcolor="${ ((!parent._ispasswordProtected.value) ? 0xCCCCCC : 0x000000 ) }" />
		<customEdittext name="_password" enabled="${ parent._ispasswordProtected.value }" password="true"
						width="$once{ parent.width-110 }" x="100" y="154" />
	 	
	 	<!-- participents -->
	 	<view name="_participentsIconBar" layout="axis:x" x="$once{ parent.width-50 }" y="180">
	        <baseChooseIconView labelid="812" height="20" width="19" bgcolor="0xE0E0E0"
	                            resourceN="calendar_add_user_rsc">
	            <handler name="onclick">
	                new lz.addAttendee(canvas,{refObj:parent.parent._participentList});
	            </handler>
	        </baseChooseIconView>
	        <baseChooseIconView labelid="629" height="20" width="19" bgcolor="0xE0E0E0"
	                            resourceN="calendar_add_user_external_rsc" >
	            <handler name="onclick">
	                new lz.addExternalAttendee(canvas,{refObj:parent.parent._participentList});
	            </handler>
	        </baseChooseIconView>
	        <view bgcolor="0xE0E0E0" height="20" width="1" />
	    </view>
	 	
	 	<labelText name="_participentLabel" x="4" y="200" labelid="803" fontstyle="bold" /> 
	 	
	 	<view name="_participentList" x="100" y="200" height="100" 
            		  bgcolor="0xE0E0E0" width="$once{ parent.width-110 }">
           
            <method name="addListItem" args="userId,firstName,lastName,email,memberId,jNameTimeZone">
            	<![CDATA[
            		new lz.attendeeListItem(this._content._inner,{
			            			userId:userId,
			            			firstName:firstName,
			            			lastName:lastName,
			            			email:email,
			            			memberId:memberId,
			            			jNameTimeZone:jNameTimeZone,
			            			width:this._content.width-10
			            		});
            	]]>
            </method> 	  
          	<view name="_content" bgcolor="0xFFFFFF" x="1" y="1" clip="true"
          			width="$once{ parent.width-1 }" height="$once{ parent.height-1 }">
          		<view name="_inner">
          			<simplelayout axis="y" spacing="1" />
          		</view>
           		<om_vscrollbar />
           	</view>
        </view>
		
		<!-- Kommentar -->
		<labelText name="_descrLabel" x="4" y="304" labelid="573" fontstyle="bold" /> 
	
		<customScrollEdittext name="_descr" y="304" x="100" width="$once{ parent.width-110 }" 
			height="124" text="" /> 
			
		<simpleLabelButton labelid="813" width="100" x="$once{ parent.width-315 }" 
	           y="$once{ parent.height-24 }" 
	           onclick="this.parent.closeAndSave();">
	        <handler name="onclick">
	        	if (canvas.contactUser != 0) {
                    new lz.labelerrorPopup(canvas,{errorlabelid:1278});
                    return;
                }
	        </handler>
        </simpleLabelButton>
		
		<simpleLabelButton labelid="814" width="100" x="$once{ parent.width-210 }" 
	           y="$once{ parent.height-24 }" 
	           onclick="this.parent.closeAndRemove();">
	         <handler name="onclick">
         		if (canvas.contactUser != 0) {
           			new lz.labelerrorPopup(canvas,{errorlabelid:1278});
           			return;
           		}
           		
           		if (Number(parent.parent.appointementId) == 0) {
           			canvas.eventDataMgr.deleteEvent();
           		} else if (parent.parent.isConnectedEvent) {
           			new lz.confirmationSingle(canvas,{refObj:this,labelid:1281,
                                   labeliderror:1280,showCheckBox:false});
           		} else {
           			new lz.confirmationSingle(canvas,{refObj:this,labelid:797,
           						showCheckBox:false,labeliderror:796});
           		} 
           	</handler>
           	<method name="sendConfirmation" args="refObj,t">
           		parent.parent.deleteAppointment.doCall();
           	</method>
        </simpleLabelButton>
	
	    <simpleLabelButton labelid="1130" width="100" x="$once{ parent.width-105 }" 
	           y="$once{ parent.height-24 }" 
	           onclick="this.parent.close();" />			
		
	</class>

</library>