<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
    	  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  
-->
<library>

	<class name="lzCalendarGrid" extends="view" x="204" y="26" bgcolor="0xFFFFFF"
					width="${ parent.width - 204 }" height="${ parent.height-26 }" >
		
		<attribute name="currentDate" value="null" />
		<attribute name="currentWeek" value="0" type="number" />
		<attribute name="currentDay" value="0" type="number" />
		<attribute name="viewType" value="month" type="string" />
		
		<attribute name="reRenderLock" value="false" type="boolean" />
		
		<attribute name="calendarEvent" value="null" />
		
		<event name="onScollContent" />
		
		<event name="onSelectDate" />
		
		<event name="onNewEventDate" />
		
		<event name="onStartEndDate" />
		
		<attribute name="tStartDate" value="null" />
		<attribute name="tEndDate" value="null" />
		
		<method name="setCurrentDate" args="tDate">
			if (this.currentDate != tDate) {
				this.currentDate = tDate;
			}
		</method>
		
		<method name="selectStartEndDateTime" args="tStartDate,tEndDate">
			this.tStartDate = tStartDate;
			this.tEndDate = tEndDate;
			this.onStartEndDate.sendEvent(null);
		</method>
		
		<method name="checkAndShow" args="tDate,dayIndex,weekIndex">
			this.setCurrentDate(tDate);
			this.currentWeek = weekIndex + 1; //the index in the xml dataset list construct starts counting with 1
			this.currentDay = dayIndex + 1; //the index in the xml dataset list construct starts counting with 1
			if (this.viewType == "day") {
				this.setAttribute("viewType","none");
				this.showDay();
			} else if (this.viewType == "week") {
				this.setAttribute("viewType","none");
				this.showWeek();
			}
		</method>
		
		<method name="isCurrentMonth" args="tMonth">
			if (this.currentDate == null) {
				if ($debug) Debug.warn("currentDate is NULL ");
				return false;
			}
			return (tMonth == this.currentDate.getMonth());
		</method>
		
		<method name="showDay">
			if ($debug) Debug.write("Show Day ",this.currentDay,this.currentWeek);
			this.reRenderLock = false;
			this.setAttribute("viewType","day");
		</method>
		
		<method name="showWeek">
			this.reRenderLock = true;
			this.setAttribute("viewType","week");
			this.reRenderLock = false;
		</method>
		
		<method name="showMonth">
			this.reRenderLock = true;
			this.setAttribute("viewType","month");
			this.reRenderLock = false;
		</method>
		
		<method name="selectCalendarEvent" args="tRef">
			if ($debug) Debug.write("selectCalendarEvent ",tRef);
			this.setAttribute("calendarEvent",tRef);
		</method>
		
		<state name="day" applied="${ classroot.viewType == 'day' }">
		
			<view width="${ parent.width }" height="${ parent.height }">
			
				<handler name="oninit">
					this.setAttribute("datapath","getAppointmentsByWeekCalendarResponse/return["+classroot.currentWeek+"]");
				</handler>
				
				<view x="41" width="${ parent.width-10 }" height="20" bgcolor="0xDDDDDD">
					<view name="days" width="${ (parent.width-41) }" clip="true"
										bgcolor="0xDDDDDD" height="19">
						
						<handler name="oninit">
							this.setAttribute("datapath","days["+classroot.currentDay+"]");
						</handler>
										
						<text name="_title" width="${ parent.width -1 }" fgcolor="0x666666"
										datapath="tDate" bgcolor="0xFFFFFF" height="19" >
							<handler name="ondata" args="d">
								var tDate = parseDateOnlyFromXmlString(d.childNodes[0].data);
								this.setAttribute("text",canvas.dayShortNames[tDate.getDay()]+" "+tDate.getDate()+"."+(tDate.getMonth()+1));
							</handler>
						</text>
						
					</view>
					<simplelayout axis="x" spacing="0" />
				</view>
				
				<view y="20" width="${ parent.width }" height="${ parent.height-20 }">
			
					<view width="${ parent.width }" height="${ parent.height }" clip="true" bgcolor="0xDDDDDD">
				
						<view width="${ parent.width-10 }" height="721" >
						
							<handler name="oninit">
								this.setAttribute("y",parent.height-721);
							</handler>
							
							<handler name="ony" args="y">
								parent.parent.parent.parent.onScollContent.sendEvent(null);
							</handler>
						
							<view name="hours" width="40" height="720" >
									
								<view name="dayBg2" resource="calendar_day_hours_index_bg_rsc" />
								
								<view>
									<handler name="oninit">
										<![CDATA[
											for (var i=0;i<24;i++) {
												if (i<10) {
													new lz.textHourHelper(this,{text:"0"+i+":00"});
												} else {
													new lz.textHourHelper(this,{text:i+":00"});
												}
											}
										]]>
									</handler>
									<simplelayout axis="y" />
								</view>
									
							</view>
							
							<view width="1" />
							
							<!-- The days -->
							<view name="days" width="${ (parent.width-41) }" 
										height="720" bgcolor="0xDDDDDD" >
							
								<handler name="oninit">
									this.setAttribute("datapath","days["+classroot.currentDay+"]");
								</handler>
								<attribute name="dayDate" value="null" />
								
								<attribute name="viewType" value="${ classroot.viewType }" type="string" />
							
								<handler name="ondata" args="d">
									if(d is lz.DataNodeMixin){
										var lzDataPointer = new lz.datapointer();
										lzDataPointer.setPointer(d);
										var xmlDate = lzDataPointer.xpathQuery('tDate/text()');
										var splitDate = xmlDate.split("-");
										this.dayDate = new Date(splitDate[0], Number(splitDate[1])-1, splitDate[2]);
									}
								</handler>
								
								<view name="_content" width="${ parent.width -1 }" bgcolor="0xFFFFFF"
												height="720" clickable="true" showhandcursor="false">
												
									<attribute name="lzCalGridTempDrawView" value="null" />
									
									<handler name="onmousedown">
										<![CDATA[
											var heightInMinutes = this.height/1440;
											//round by 30 minutes
											var tPixels30Minutes = heightInMinutes*30;
											var tStarty = this.getMouse("y");
											tStarty = Math.round(tStarty/tPixels30Minutes)*tPixels30Minutes;
											this.lzCalGridTempDrawView = new lz.lzCalGridTempDrawView(this,{
																					y:tStarty,
																					starty:tStarty,
																					height:tPixels30Minutes,
																					heightInMinutes:heightInMinutes,
																					tPixels30Minutes:tPixels30Minutes
																				});
										]]>								
									</handler>
									
									<handler name="onmouseup">
										if (this.lzCalGridTempDrawView != null) {
											var tStartDate = new Date();
											//clone Date to have day and month
											tStartDate.setTime(parent.dayDate.getTime());
											var startMinutesTotal = this.lzCalGridTempDrawView.getStartMinutesTotal();
											tStartDate.setHours(Math.floor(startMinutesTotal/60));
											tStartDate.setMinutes(startMinutesTotal-(tStartDate.getHours()*60));
											
											var tEndDate = new Date();
											//clone Date to have day and month
											tEndDate.setTime(parent.dayDate.getTime());
											var endMinutesTotal = this.lzCalGridTempDrawView.getEndMinutesTotal();
											tEndDate.setHours(Math.floor(endMinutesTotal/60));
											tEndDate.setMinutes(endMinutesTotal-(tEndDate.getHours()*60));
										
											this.lzCalGridTempDrawView.destroy();
											this.lzCalGridTempDrawView = null;
											
											parent.parent.parent.parent.parent.parent.selectStartEndDateTime(tStartDate,tEndDate);
										}
									</handler>
									
									<view name="dayBg2" resource="calendar_one_day_hours_index_bg_rsc" stretches="width" 
										width="${ parent.width }"  ></view>
												
									<view datapath="appointments" bgcolor="0xA59CFC" width="${ parent.width }" height="60">
										<handler name="ondata" args="d">
											<![CDATA[
												if (classroot.reRenderLock) {
													return;
												}
												var dataPointer = new lz.datapointer();
												dataPointer.setPointer(d);
												var startDate = parseDateTimeFromXmlString(dataPointer.xpathQuery('start/text()'));
												var endDate = parseDateTimeFromXmlString(dataPointer.xpathQuery('end/text()'));
												
												if ($debug) Debug.write("COMPARE -- ",startDate,endDate);
												
												var heightInMinutes = parent.height/1440;
												var startMin = (startDate.getHours() * 60 ) + startDate.getMinutes();
												var endMin = (endDate.getHours() * 60 ) + endDate.getMinutes();
												
												this.setAttribute("y",Math.round(heightInMinutes*startMin));
												this.setAttribute("height",Math.round((endMin - startMin)*heightInMinutes));
												
												if ($debug) Debug.write("y,height -- ",this.y,this.height);
											]]>
										</handler>
										<handler name="onclick" >
											var appointmentId = this.datapath.xpathQuery('appointmentId/text()');
											if ($debug) Debug.write("click ",appointmentId);
											parent.parent.parent.parent.parent.parent.parent.selectCalendarEvent(this);
											//this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
										</handler>
										<text name="_title" x="2" datapath="title" text="$path{ 'text()' }" />
									</view>
								</view>
								
							</view>
							
							<simplelayout axis="x" spacing="0" />
							
						</view>
						
						<om_vscrollbar />
						
					</view>
					
				</view>
				
			</view>
		
			
		</state>
		
		<state name="week" applied="${ classroot.viewType == 'week' }">
		
			<view width="${ parent.width }" height="${ parent.height }">
			
				<handler name="oninit">
					this.setAttribute("datapath","getAppointmentsByWeekCalendarResponse/return["+classroot.currentWeek+"]");
				</handler>
			
				<view x="41" width="${ parent.width-10 }" height="20" bgcolor="0xDDDDDD">
					<view name="days" datapath="days" width="${ (parent.width-41)/7 }" clip="true"
										bgcolor="0xDDDDDD" height="19">
										
						<text name="_title" width="${ parent.width -1 }" fgcolor="0x666666"
										datapath="tDate" bgcolor="0xFFFFFF" height="19" >
							<attribute name="tDate" value="null" />
							<handler name="ondata" args="d">
								this.tDate = parseDateOnlyFromXmlString(d.childNodes[0].data);
								var tStringWeekDay = canvas.dayShortNames[tDate.getDay()];
								if ($debug) Debug.write("Calc Week day ",tStringWeekDay,this.tDate.getDay(),this.tDate);
								this.setAttribute("text",canvas.dayShortNames[this.tDate.getDay()]+" "+this.tDate.getDate()+"."+(this.tDate.getMonth()+1)+".");
							</handler>
							<handler name="onmouseover">
								this.setAttribute("fontstyle","bold");
							</handler>
							<handler name="onmouseout">
								this.setAttribute("fontstyle","plain");
							</handler>
							<handler name="onclick">
								parent.parent.parent.parent.onSelectDate.sendEvent(this.tDate);
							</handler>
						</text>
						
					</view>
					<simplelayout axis="x" spacing="0" />
				</view>
				
				<view y="20" width="${ parent.width }" height="${ parent.height-20 }">
			
					<view width="${ parent.width }" height="${ parent.height }" clip="true" bgcolor="0xDDDDDD">
				
						<view width="${ parent.width-10 }" height="721" >
						
							<handler name="oninit">
								this.setAttribute("y",parent.height-this.height);
							</handler>
							
							<handler name="ony" args="y">
								parent.parent.parent.parent.onScollContent.sendEvent(null);
							</handler>
						
							<view name="hours" width="40" height="720" >
									
								<view name="dayBg2" resource="calendar_day_hours_index_bg_rsc" />
								
								<view>
									<handler name="oninit">
										<![CDATA[
											for (var i=0;i<24;i++) {
												if (i<10) {
													new lz.textHourHelper(this,{text:"0"+i+":00"});
												} else {
													new lz.textHourHelper(this,{text:i+":00"});
												}
											}
										]]>
									</handler>
									<simplelayout axis="y" />
								</view>
									
							</view>
							
							<view width="1" />
							
							<!-- The days -->
							<view name="days" datapath="days" width="${ (parent.width-41)/7 }" 
										height="720" bgcolor="0xDDDDDD" >
							
								<attribute name="dayDate" value="null" />
								
								<attribute name="viewType" value="${ classroot.viewType }" type="string" />
							
								<handler name="ondata" args="d">
									if(d is lz.DataNodeMixin){
										var lzDataPointer = new lz.datapointer();
										lzDataPointer.setPointer(d);
										var xmlDate = lzDataPointer.xpathQuery('tDate/text()');
										var splitDate = xmlDate.split("-");
										this.dayDate = new Date(splitDate[0], Number(splitDate[1])-1, splitDate[2]);
									}
								</handler>
								
								<view name="_content" width="${ parent.width -1 }" bgcolor="0xFFFFFF"
												height="720" clickable="true" showhandcursor="false">
												
									<attribute name="lzCalGridTempDrawView" value="null" />
									
									<handler name="onmousedown">
										<![CDATA[
											var heightInMinutes = this.height/1440;
											//round by 30 minutes
											var tPixels30Minutes = heightInMinutes*30;
											var tStarty = this.getMouse("y");
											tStarty = Math.round(tStarty/tPixels30Minutes)*tPixels30Minutes;
											this.lzCalGridTempDrawView = new lz.lzCalGridTempDrawView(this,{
																					y:tStarty,
																					starty:tStarty,
																					height:tPixels30Minutes,
																					heightInMinutes:heightInMinutes,
																					tPixels30Minutes:tPixels30Minutes
																				});
										]]>								
									</handler>
									
									<handler name="onmouseup">
										if (this.lzCalGridTempDrawView != null) {
											var tStartDate = new Date();
											//clone Date to have day and month
											tStartDate.setTime(parent.dayDate.getTime());
											var startMinutesTotal = this.lzCalGridTempDrawView.getStartMinutesTotal();
											tStartDate.setHours(Math.floor(startMinutesTotal/60));
											tStartDate.setMinutes(startMinutesTotal-(tStartDate.getHours()*60));
											
											var tEndDate = new Date();
											//clone Date to have day and month
											tEndDate.setTime(parent.dayDate.getTime());
											var endMinutesTotal = this.lzCalGridTempDrawView.getEndMinutesTotal();
											tEndDate.setHours(Math.floor(endMinutesTotal/60));
											tEndDate.setMinutes(endMinutesTotal-(tEndDate.getHours()*60));
										
											this.lzCalGridTempDrawView.destroy();
											this.lzCalGridTempDrawView = null;
											
											parent.parent.parent.parent.parent.parent.selectStartEndDateTime(tStartDate,tEndDate);
										}
									</handler>
									
									<view name="dayBg2" resource="calendar_day_bg_rsc" stretches="width" 
										width="${ parent.width }"  ></view>
												
									<view datapath="appointments" bgcolor="0xA59CFC" width="${ parent.width }" height="60">
										<handler name="ondata" args="d">
											<![CDATA[
												if (classroot.reRenderLock) {
													return;
												}
												var dataPointer = new lz.datapointer();
												dataPointer.setPointer(d);
												var startDate = parseDateTimeFromXmlString(dataPointer.xpathQuery('start/text()'));
												var endDate = parseDateTimeFromXmlString(dataPointer.xpathQuery('end/text()'));
												
												if ($debug) Debug.write("COMPARE -- ",startDate,endDate);
												
												var heightInMinutes = parent.height/1440;
												var startMin = (startDate.getHours() * 60 ) + startDate.getMinutes();
												var endMin = (endDate.getHours() * 60 ) + endDate.getMinutes();
												
												this.setAttribute("y",Math.round(heightInMinutes*startMin));
												this.setAttribute("height",Math.round((endMin - startMin)*heightInMinutes));
												
												if ($debug) Debug.write("y,height -- ",this.y,this.height);
											]]>
										</handler>
										<handler name="onclick" >
											var appointmentId = this.datapath.xpathQuery('appointmentId/text()');
											if ($debug) Debug.write("click ",appointmentId);
											parent.parent.parent.parent.parent.parent.parent.selectCalendarEvent(this);
											//this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
										</handler>
										<text name="_title" x="2" datapath="title" text="$path{ 'text()' }" />
									</view>
								</view>
								
							</view>
							
							<simplelayout axis="x" spacing="0" />
							
						</view>
						
						<om_vscrollbar />
						
					</view>
				
				</view>
				
			</view>	
			
		</state>
		
		<state name="month" applied="${ classroot.viewType == 'month' }">
		
			<view width="${ parent.width }" height="${ parent.height }">
			
				<view datapath="getAppointmentsByWeekCalendarResponse/return" 
						width="${ parent.width }" height="${ Math.round( parent.height/6 ) }" >
				
					<!-- The months -->
			
					<!-- The days -->
					<view name="days" datapath="days" width="${ Math.round( parent.width/7 ) }" clip="true"
								height="${ parent.height }" bgcolor="0xDDDDDD" >
					
						<attribute name="dayDate" value="null" />
						
						<attribute name="viewType" value="${ classroot.viewType }" type="string" />
					
						<handler name="ondata" args="d">
							if(d is lz.DataNodeMixin){
								var lzDataPointer = new lz.datapointer();
								lzDataPointer.setPointer(d);
								var xmlDate = lzDataPointer.xpathQuery('tDate/text()');
								var splitDate = xmlDate.split("-");
								this.dayDate = new Date(splitDate[0], Number(splitDate[1])-1, splitDate[2]);
								this.renderView();
							}
						</handler>
						
						<method name="renderView">
							var tDay = this.dayDate.getDate();
							var tMonth = this.dayDate.getMonth();
							if (parent.parent.parent.isCurrentMonth(tMonth)) {
								this._content._title.setAttribute("fgcolor",0x000000);
								if (tDay == 1) {
									tDay = tDay + "." + canvas.monthnames[this.dayDate.getMonth()];
								}
							} else {
								this._content._title.setAttribute("fgcolor",0xBBBBBB);
							}
							this._content._title.setAttribute("text",tDay);
						</method>
						
						<view name="_content" width="${ parent.width -1 }" bgcolor="0xFFFFFF"
										height="${ parent.height -1 }" clickable="true" showhandcursor="false">
							
							<handler name="onclick">
								lz.Cursor.restoreCursor();
								parent.parent.parent.parent.onNewEventDate.sendEvent(parent.dayDate);
							</handler>
							
							<handler name="onmouseover">
								lz.Cursor.setCursorGlobal("edit_add_rsc");
							</handler>
							
							<handler name="onmouseout">
								lz.Cursor.restoreCursor();
							</handler>
									
							<text name="_title">
								<handler name="onmouseover">
									this.setAttribute("fontstyle","bold");
								</handler>
								<handler name="onmouseout">
									this.setAttribute("fontstyle","plain");
								</handler>
								<handler name="onclick">
									parent.parent.parent.parent.parent.onSelectDate.sendEvent(parent.parent.dayDate);
								</handler>
							</text>
						
							<view width="${ parent.width }" y="18">
								<view datapath="appointments" bgcolor="0xA59CFC" width="${ parent.width }">
									<handler name="onclick" >
										var appointmentId = this.datapath.xpathQuery('appointmentId/text()');
										if ($debug) Debug.write("click ",appointmentId);
										parent.parent.parent.parent.parent.parent.selectCalendarEvent(this);
										//this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
									</handler>
									<text name="_time" datapath="start" >
										<handler name="ondata" args="d">
											this.setAttribute("text",parseTimeStringFromXmlString(d.childNodes[0].data));
										</handler>
									</text>
									<text name="_title" x="36" datapath="title" text="$path{ 'text()' }" />
								</view>
								<simplelayout axis="y" spacing="1" />
		 					</view>
		 					
						</view>
					
					</view>
					
				<simplelayout axis="x" spacing="0" />
				</view>
				
				<simplelayout axis="y" spacing="0" />
			
			</view>
		
		</state>
		
	</class>
	
	<class name="textHourHelper" extends="text" height="30" 
		width="40" fgcolor="0x666666" />

</library>