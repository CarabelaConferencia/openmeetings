<?xml version="1.0" encoding="UTF-8" ?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<library>
	<!-- FIXME need to be generalized -->
	<!--- View of the buttom area of chat. It contains buttons of message,emoticons,clear. -->
	<class name="privateChatTabBottom" extends="view">

		<view x="0" y="0" height="20" width="${ parent.width }" name="message"
			bgcolor="$once{ canvas.getThemeColor('basebgcolorizer') }">
			<method name="getText">
				return this._ctext.getText();
			</method>
			<method name="setText" args="txt">
				this._ctext.setAttribute('text',txt);
			</method>
			<customInputtext name="_ctext" width="${ parent.width-2 }"
				height="$once{ parent.height-2 }" x="1" y="1" bgcolor="white">
				<!-- RTL should be fixed separately -->
				<handler name="onkeyup" args="key">
	            <![CDATA[
	            	/* RTL should be fixed separately
	                if ($debug) Debug.write("onkeyup");
	                
	                var reverse = canvas.reverseAll(parent.getText());
	                if ($debug) Debug.write("reverse : ", reverse);
	                */
	               // parent.setText(reverse);
	                // 13 is return
	                if ((key==27) || (key==13)) {
	                	this.parent.parent._button._button.onclick.sendEvent();
	                }
	            ]]>
				</handler>
			</customInputtext>
		</view>

		<labelCheckbox name="_inverseWording" x="2" y="24"
			labelid="580">
			<attribute name="doUpdate" value="false" type="boolean" />
			<handler name="oninit">
				var t = new lz.sharedObject();
				t.getLocal('userdata');
				var g = t.getData('userdata');
				var save = g["rtlCheckbox"];
				//if ($debug) Debug.write("oninit doUpdate",save,g);
				if(save) {
					this.doUpdate = false;
					this.setValue(true);
				}
				this.doUpdate = true;
			</handler>
			<handler name="onvalue" args="v">
				if (this.doUpdate) {
					//if ($debug) Debug.write("onvalue doUpdate",this.getValue());
					var t = new lz.sharedObject();
					t.getLocal('userdata');
					var g = t.getData('userdata');
					if (g==null) g = new Array();
					g["rtlCheckbox"]=this.getValue();
					//if ($debug) Debug.write("onvalue doUpdate",g["rtlCheckbox"]);
					t.setData('userdata',g);
					t.flush();
				}
			</handler>
			<labelTooltip labelid="581" />
		</labelCheckbox>

		<view name="_button" layout="axis:x;spacing:0" y="22" align="right">

			<attribute name="objMessage" value="null" />
			<simpleLabelButton align="right" y="0" labelid="220"
				name="_button" width="70">
				<handler name="onclick">
					parent.objMessage = new Array ();
					parent.objMessage[0] = 'privatechat';
					//The server side will put time here
					parent.objMessage[1] = "";
					parent.objMessage[2] = 'newtextmessage';
					parent.objMessage[3] = hib.userobject.login;
					var message = this.parent.parent.message.getText();
					//if (parent.parent._inverseWording.getValue()) message = canvas.reverseAll(message)
					parent.objMessage[4] = message;
					parent.objMessage[5] = canvas.currentusercolor;
					parent.objMessage[6] = parent.parent.parent.refObj.publicSID;
					parent.objMessage[7] = canvas.isrtl;
					parent.objMessage[8] = hib.userobject.user_id;
					if (this.parent.parent.message.getText().length!=0){
						//Debug.write("send: ",this.parent.objMessage);
						parent.sendMessageWithClientByPublicSID.doCall();
						this.parent.parent.message.setText('');
					}
				</handler>
			</simpleLabelButton>

			<netRemoteCallHib name="sendMessageWithClientByPublicSID"
				funcname="chatservice.sendMessageWithClientByPublicSID"
				remotecontext="$once{ canvas.thishib }">
				<netparam><method name="getValue"> return parent.parent.objMessage; </method></netparam>
				<netparam><method name="getValue"> return parent.parent.parent.parent.refObj.publicSID; </method></netparam>
				<handler name="ondata" args="value">
                <![CDATA[
                    //The onResult-Handler will be called be the rtmpconnection
                    if ($debug) Debug.write("chatservice.sendMessageWithClientByPublicSID getValue : ",parent.parent.parent.refObj.publicSID,value);
                ]]>
				</handler>
			</netRemoteCallHib>

		</view>
		<miniIcons y="22" name="_show_emots" resource="smile_chat_log_rsc"
			width="16" height="16" showhandcursor="true" align="right" x="90" layout="axis:x;spacing:5" >
			<handler name="onclick">
				if ($debug) Debug.write("this: ", this);
				var pick = new lz.emotIconsSelector(canvas,{
					btnRef: this.parent,
					x:(this.getAttributeRelative('x',canvas)-140),
					y:(this.getAttributeRelative('y',canvas)-140)
				});
				lz.ModeManager.makeModal( pick );
			</handler>
			<labelTooltip labelid="445" />
		</miniIcons>
	</class>
</library>
