Index: src/org/openmeetings/app/remote/LanguageService.java
===================================================================
--- src/org/openmeetings/app/remote/LanguageService.java	(revision 1333795)
+++ src/org/openmeetings/app/remote/LanguageService.java	(working copy)
@@ -68,6 +68,10 @@
 		return fieldLanguageDaoImpl.getLanguages();
 	}
 
+	public FieldLanguage getLanguage(Long language_id) {
+		return fieldLanguageDaoImpl.getFieldLanguageById(language_id);
+	}
+	
 	/**
 	 * get all fields of a given Language_id
 	 * 
Index: WebContent/src/base/auth/checkLoginData.lzx
===================================================================
--- WebContent/src/base/auth/checkLoginData.lzx	(revision 1333795)
+++ WebContent/src/base/auth/checkLoginData.lzx	(working copy)
@@ -297,7 +297,7 @@
                             	
                             	new lz.labelerrorPopup(canvas,{error:'SIP Applet is not ready!'});
                             	
-                            	hib.getLanguageByIdAndMax.doCall();
+                            	hib.getLanguage.doCall();
                                 canvas.focusOnItem = null;
                                 parent.close();
                             
Index: WebContent/src/base/components/text/customEdittext.lzx
===================================================================
--- WebContent/src/base/components/text/customEdittext.lzx	(revision 1333795)
+++ WebContent/src/base/components/text/customEdittext.lzx	(working copy)
@@ -21,7 +21,7 @@
 <library>
 
 <class name="customEdittext" extends="inputtext" bgcolor="0xFFFFFF" fontsize="11" height="20" >
-	
+	<attribute name="isrtl" value="false" type="boolean"/>
 	<view name="v_border" height="1"       bgcolor="$once{ canvas.getThemeColor('secondBorderColor') }" width="$once{parent.width}" />
     <view name="h_border" width="1"  y="1" bgcolor="$once{ canvas.getThemeColor('secondBorderColor') }" height="$once{parent.height -1}" />
 	
@@ -37,27 +37,34 @@
 	<handler name="onfocus" args="f">
     	this.preText = this.getText();
     </handler>
-    
+
+	<handler name="onisrtl">
+		if(this.isrtl){
+			this.setAttribute('textalign', 'right');
+		} else{
+			this.setAttribute('textalign', 'left');
+		}
+	</handler>
+	
     <handler name="oninit">
     	//this.field.setAttribute("bgcolor",0xFFFFFF);
     </handler>
     
     <handler name="ontext" args="txt">
     	<![CDATA[
-            
-    	    //
-    	   
+	        if (txt == null || txt.length == 0) {
+	        	return;
+	        }
+			if (this.isrtl) {
+				this.setAttribute('text', canvas.rtl(txt));
+			}
+	        
     	    if (System.capabilities.os.indexOf('Linux')==-1) { 
                 return; 
 	        }
 	        
 	        //if ($debug) Debug.write("System.capabilities.os -- START ",System.capabilities.os,txt);
 	        
-	        if (txt == null || txt.length == 0) {
-	        	return;
-	        }
-	        
-	        
 	        //UTF8 character remappings
             var cp1252 = new Object();
             cp1252[0x20ac]=0x80;
Index: WebContent/src/base/components/text/customInputtext.lzx
===================================================================
--- WebContent/src/base/components/text/customInputtext.lzx	(revision 1333795)
+++ WebContent/src/base/components/text/customInputtext.lzx	(working copy)
@@ -21,29 +21,36 @@
 <library>
 
 <class name="customInputtext" extends="inputtext">
-	  
-	 <handler name="onfocus">
-	 
-	 	if ($debug) Debug.write("customInputtext onFocus : ", canvas.isrtl);
-	 		
-	 
-		 if(canvas.isrtl == 'true'){
-	 		if ($debug) Debug.write("customInputtext onFocus : RTL is set");
-	 		this.setAttribute('textalign', 'right');
-        }
-        else{
-        	if ($debug) Debug.write("customInputtext onFocus : RTL is NOT set");
-      		this.setAttribute('textalign', 'left');
-        
-        }
-	 </handler>	  
-	  
-	 <handler name="ontext" args="txt">
-        <![CDATA[
-            
-            //
-           
-            if (System.capabilities.os.indexOf('Linux')==-1) { 
+	<attribute name="isrtl" value="false" type="boolean"/>
+	<handler name="oninit">
+		if (this.isrtl) {
+			this.setAttribute('textalign', 'right');
+		} else {
+			this.setAttribute('textalign', 'left');
+		}
+	</handler>
+	
+	<handler name="onisrtl">
+		if (this.isrtl) {
+			this.setAttribute('textalign', 'right');
+		} else {
+			this.setAttribute('textalign', 'left');
+		}
+	</handler>
+		  
+	<handler name="ontext" args="txt">
+		<![CDATA[
+			//if ($debug) Debug.write("ontext", txt);
+			
+			if (txt == null || txt.length == 0) {
+				return;
+			}
+			
+			if (this.isrtl) {
+				this.setAttribute('text', canvas.rtl(txt));
+			}
+			
+			if (System.capabilities.os.indexOf('Linux') == -1) {
                 return; 
             }
             
Index: WebContent/src/base/components/text/library.lzx
===================================================================
--- WebContent/src/base/components/text/library.lzx	(revision 1333795)
+++ WebContent/src/base/components/text/library.lzx	(working copy)
@@ -26,5 +26,6 @@
     <include href="customEdittext.lzx" />
     <include href="customscrollEdittext.lzx" />
     <include href="customInputtext.lzx" />
+    <include href="rtl.lzx" />
 
 </library>
Index: WebContent/src/base/hibernate/hibRtmpConnection.lzx
===================================================================
--- WebContent/src/base/hibernate/hibRtmpConnection.lzx	(revision 1333795)
+++ WebContent/src/base/hibernate/hibRtmpConnection.lzx	(working copy)
@@ -259,6 +259,7 @@
 	            userlang = canvas.language_id;
 	        } else if (userlang == -1) {
 	            var lang_id = canvas.default_lang_id;
+	            var rtl = canvas.isrtl;
 	            
 	            var browserLang = flash.external.ExternalInterface.call("function(){return window.navigator.systemLanguage || window.navigator.userLanguage || window.navigator.language;}");
 	            if (browserLang == null) {
@@ -291,11 +292,15 @@
 	                    i = (fullMatch != -1) ? fullMatch : partMatch;
 	                    xpath = "languagesSet:/item[" + i + "]/language_id/text()";
 	                    lang_id = languagesSet.getPointer().xpathQuery(xpath);
+	                    xpath = "boolean(languagesSet:/item[" + i + "]/rtl/text())";
+	                    rtl = languagesSet.getPointer().xpathQuery(xpath);
+	                    if($debug) Debug.write("RTL: ", rtl);
 	                }
 	            }
 	            
 	            if (canvas.language_id == 0) {
 	                userlang = lang_id;
+	                canvas.isrtl = rtl;
 	            } else {
 	                userlang = canvas.language_id;
 	            }
@@ -519,7 +524,18 @@
         </handler>   
     </netRemoteCallHib>
         
-    <netRemoteCallHib name="getLanguageByIdAndMax" funcname="languageservice.getLanguageByIdAndMax" >
+	<netRemoteCallHib name="getLanguage" funcname="languageservice.getLanguage" >
+		<netparam><method name="getValue">return parent.parent.userlang;</method></netparam>
+		<handler name="ondata" args="value">
+		<![CDATA[
+			if($debug) Debug.write("hibRtmpConnection/getLanguage: ", value);
+			canvas.setAttribute('isrtl', value.rtl);
+			parent.getLanguageByIdAndMax.doCall();
+		]]>
+		</handler>
+	</netRemoteCallHib>
+	
+	<netRemoteCallHib name="getLanguageByIdAndMax" funcname="languageservice.getLanguageByIdAndMax" >
         <attribute name="start" value="0" type="number" />
         <attribute name="step" value="100" type="number" /> 
         <attribute name="max" value="1300" type="number" />    
@@ -791,7 +807,7 @@
                                 
                             }
                         } else {
-                            hib.getLanguageByIdAndMax.doCall();
+                            hib.getLanguage.doCall();
                             canvas.focusOnItem = null;
                         }
                     } else {
Index: WebContent/src/modules/chat/overAllChatTabBottom.lzx
===================================================================
--- WebContent/src/modules/chat/overAllChatTabBottom.lzx	(revision 1333795)
+++ WebContent/src/modules/chat/overAllChatTabBottom.lzx	(working copy)
@@ -34,10 +34,10 @@
             return this._ctext.getText();
         </method>
         <method name="setText" args="txt">
-            this._ctext.setAttribute('text',txt);
+            this._ctext.setAttribute('text', txt);
         </method>
         <customInputtext name="_ctext" width="${ parent.width-81 }" height="$once{ parent.height-2 }"
-            x="1" y="1" bgcolor="white" >
+            x="1" y="1" bgcolor="white" isrtl="${parent.parent._inverseWording.getValue()}" >
             <handler name="onkeyup" args="key">
                 <![CDATA[
                 // 13 is return
@@ -59,7 +59,6 @@
                 parent.objMessage[2] = 'newtextmessage';
                 parent.objMessage[3] = hib.userobject.login;
                 var message = this.parent.getText();
-                if (parent.parent._inverseWording.getValue()) message = canvas.reverseWordingsBySplit(message)
                 parent.objMessage[4] = message;
                 parent.objMessage[5] = canvas.currentusercolor;
                 parent.objMessage[6] = canvas.publicSID;
Index: WebContent/src/modules/conference/tabcontent/chat/chatTabBottom.lzx
===================================================================
--- WebContent/src/modules/conference/tabcontent/chat/chatTabBottom.lzx	(revision 1333795)
+++ WebContent/src/modules/conference/tabcontent/chat/chatTabBottom.lzx	(working copy)
@@ -32,12 +32,9 @@
 				this._ctext.setAttribute('text',txt);
 			</method>
 			<customInputtext name="_ctext" width="${ parent.width-2 }" height="$once{ parent.height-2 }"
-				x="1" y="1" bgcolor="white" >
+				x="1" y="1" bgcolor="white" isrtl="${parent.parent._inverseWording.getValue()}" >
 				<handler name="onkeyup" args="key">
 	                <![CDATA[
-	                var reverse = canvas.reverseAll(parent.getText());
-	                
-	                // parent.setText(reverse);
 	                // 13 is return
 	                if ((key==27) || (key==13)) {
 	                	this.parent._button.onclick.sendEvent();
Index: WebContent/src/modules/conference/tabcontent/chat/chatTabItemEmoticons.lzx
===================================================================
--- WebContent/src/modules/conference/tabcontent/chat/chatTabItemEmoticons.lzx	(revision 1333795)
+++ WebContent/src/modules/conference/tabcontent/chat/chatTabItemEmoticons.lzx	(working copy)
@@ -54,12 +54,9 @@
 	        //Debug.write("downloadurl "+downloadurl);
 	        this._userpic.setAttribute('src',downloadurl);	
 	        
-	        if(canvas.isrtl == 'true'){
+	        if(canvas.isrtl){
 	         	if($debug) Debug.write("chatTabItemEmoticons RTL is set");
 	       
-	        	this.header_user.setAttribute('textalign', 'right');
-	        	this.header_time.setAttribute('align', 'left');
-	        	this.header_time.setAttribute('x', '40');
 	        	this.multi.setAttribute('textalign', 'right');
 	        	this.multi.setAttribute('align', 'right');
 	        }
@@ -90,7 +87,7 @@
         </handler>
 	</image>
 	
-	<text text="$once{ parent.username }" x="40" resize="false" fontsize="11" multiline="true"
+	<text text="$once{ canvas.isrtl ? canvas.reverseWordingsBySplit(parent.username) : parent.username }" x="40" resize="false" fontsize="11" multiline="true"
 		  width="140" height="$once{ parent.height }"
 		  name="header_user">
 	</text>
Index: WebContent/src/modules/conference/whiteboard/base/baseDrawLetter.lzx
===================================================================
--- WebContent/src/modules/conference/whiteboard/base/baseDrawLetter.lzx	(revision 1333795)
+++ WebContent/src/modules/conference/whiteboard/base/baseDrawLetter.lzx	(working copy)
@@ -70,6 +70,7 @@
   	
   	<!-- "plain", "bold" , "italic" or "bolditalic". -->
   	<attribute name="currentlayerstyle" value="plain" type="string" setter="this.setNewLayerStyle(currentlayerstyle)" />
+  	<attribute name="isrtl" value="$once{canvas.isrtl}" type="boolean"/>
     
     <method name="setNewLayerLetter" args="cl">
         this.currentlayerletter=cl;
@@ -132,22 +133,22 @@
 		]]>
 	</method>
   	
-		<method name="drawTextField" args="textforfield,width,height,x,y" >
+		<method name="drawTextField" args="textforfield,width,height,x,y,isrtl" >
 
 			//Debug.write("drawTextField: ",textforfield,width,x,y);
 			var tempO = this.newTextField(this, 'letter' + this.getCounter(),
 					textforfield, width, height, x, y, this.currentlayersize,
-					this.currentlayerletter, this.currentlayerstyle);
+					this.currentlayerletter, this.currentlayerstyle,isrtl);
 			this.layers.push(tempO);
 			this.drawTextFieldregister(textforfield, width, x, y,
 					this.currentlayersize, this.currentlayerletter,
 					this.currentlayerstyle, tempO.height, this
-							.getSWFDocumentStatus(), this.getZIndex());
+							.getSWFDocumentStatus(), this.getZIndex(), isrtl);
 		</method>
 	
 	<!-- editModus -->
-	<method name="setTextFieldByName" args="txtName,textforfield,width,x,y,height" >
-		if ($debug) Debug.write("drawTextFieldByName ",txtName,textforfield,width,x,y);
+	<method name="setTextFieldByName" args="txtName,textforfield,width,x,y,height,isrtl" >
+		if ($debug) Debug.write("drawTextFieldByName ",txtName,textforfield,width,x,y,isrtl);
 		//this.checkForChanges(txtName,textforfield,width,x,y,height);
 		this.edittextLetterObject.setAttribute('text',textforfield);
 		this.edittextLetterObject.setTextEncoded(textforfield);
@@ -157,6 +158,7 @@
 		this.edittextLetterObject.setAttribute('fontsize',this.currentlayersize);
 		this.edittextLetterObject.setAttribute('fgcolor',this.currentlayerletter);
 		this.edittextLetterObject.setAttribute('fontstyle',this.currentlayerstyle);
+		this.edittextLetterObject.setAttribute('textalign', isrtl ? 'right' : 'left');
 		this.updateObjectBounds();
 		this.updateByEditLetterObject();
 		//this.setModus('hand');
@@ -234,7 +236,8 @@
 			    this.baseactionobjectList[eg][1] = this.edittextLetterObject.text;
 			    this.baseactionobjectList[eg][2] = this.edittextLetterObject.fgcolor;
 			    this.baseactionobjectList[eg][3] = this.edittextLetterObject.fontsize;
-			    this.baseactionobjectList[eg][4] = this.edittextLetterObject.fontstyle;			
+			    this.baseactionobjectList[eg][4] = this.edittextLetterObject.fontstyle;
+			    this.baseactionobjectList[eg][5] = this.edittextLetterObject.isrtl;
 				this.baseactionobjectList[eg][this.baseactionobjectList[eg].length-5] = this.edittextLetterObject.x
 				this.baseactionobjectList[eg][this.baseactionobjectList[eg].length-4] = this.edittextLetterObject.y;
 				this.baseactionobjectList[eg][this.baseactionobjectList[eg].length-3] = this.edittextLetterObject.width;
@@ -259,6 +262,7 @@
 		editObj.setAttribute('fontsize',actionObject[3]);
 		editObj.setAttribute('fgcolor',actionObject[2]);
 		editObj.setAttribute('fontstyle',actionObject[4]);
+		editObj.setAttribute('isrtl',actionObject[5]);
 	</method>
 	
 	<method name="checkForChanges" args="txtName,textforfield,width,x,y,height">
@@ -274,12 +278,13 @@
 		this.newTextField(obj,actionObject[actionObject.length-1],actionObject[1],
 		              actionObject[actionObject.length-3],actionObject[actionObject.length-2],
 		              actionObject[actionObject.length-5],actionObject[actionObject.length-4],
-		              actionObject[3],actionObject[2],actionObject[4]);
+		              actionObject[3],actionObject[2],actionObject[4], actionObject[5]);
 		              
 		this.doSWFDocumentStatus(this.currentlayer,actionObject[actionObject.length-7]);
 	</method>
 	
-		<method name="newTextField" args="obj,naming,textforfield,width,height,x,y,fontsize,fgcolor,fontstyle">
+		<method name="newTextField" args="obj,naming,textforfield,width,height,x,y,fontsize,fgcolor,fontstyle,isrtl">
+			if ($debug) Debug.write(obj,naming,textforfield,width,height,x,y,fontsize,fgcolor,fontstyle,isrtl);
 			this.currentlayer = new lz.whiteBoardTextField(obj, {
 						name : naming,
 						x : x,
@@ -290,28 +295,30 @@
 						text : textforfield,
 						fontsize : fontsize,
 						fgcolor : fgcolor,
-						fontstyle : fontstyle
+						fontstyle : fontstyle,
+						textalign: isrtl ? 'right' : 'left'
 					});
 			this.currentlayer.setTextEncoded(textforfield);
 			//Add Layer to global Layer  	
 			return this.currentlayer;
 		</method>
 	
-	<method name="drawTextFieldregister" args="textforfield,width,x,y,fontsize,fgcolor,fontstyle,height,swfObj,zIndex">
+	<method name="drawTextFieldregister" args="textforfield,width,x,y,fontsize,fgcolor,fontstyle,height,swfObj,zIndex,isrtl">
 		var actionObject = new Array();
 	    actionObject[0] = "letter";
 	    actionObject[1] = textforfield;
 	    actionObject[2] = fgcolor;
 	    actionObject[3] = fontsize;
 	    actionObject[4] = fontstyle;
-	    actionObject[5] = zIndex;//-8
-	    actionObject[6] = swfObj;//-7
-		actionObject[7] = this.counter;//-6
-	    actionObject[8] = x;//-5
-	    actionObject[9] = y;//-4
-	    actionObject[10] = width;//-3
-	    actionObject[11] = height;//-2
-	    actionObject[12] = this.currentlayer.name;//-1	    	    
+	    actionObject[5] = isrtl;
+	    actionObject[6] = zIndex;//-8
+	    actionObject[7] = swfObj;//-7
+		actionObject[8] = this.counter;//-6
+	    actionObject[9] = x;//-5
+	    actionObject[10] = y;//-4
+	    actionObject[11] = width;//-3
+	    actionObject[12] = height;//-2
+	    actionObject[13] = this.currentlayer.name;//-1	    	    
 	    this.baseactionobjectList.push(actionObject);	
 	    this.checkStepLayers();
 	    this.onsharedMessage('draw',actionObject);	
Index: WebContent/src/modules/conference/whiteboard/base/baseDrawWords.lzx
===================================================================
--- WebContent/src/modules/conference/whiteboard/base/baseDrawWords.lzx	(revision 1333795)
+++ WebContent/src/modules/conference/whiteboard/base/baseDrawWords.lzx	(working copy)
@@ -97,7 +97,7 @@
 			
         	this.refObj.drawTextField(this._textview._textview.getURLEncodedText(),
                     this._textview._textview.width,
-                    this._textview._textview.height,x,y);
+                    this._textview._textview.height,x,y, this._inverseWording.getValue());
                     
         } else if (this._textview._textview.getURLEncodedText().length!=0 && this.inittext.length!=0){
             
@@ -116,7 +116,7 @@
         	this.refObj.setTextFieldByName(this.initTextName,
                 this._textview._textview.getURLEncodedText(),
                 this._textview._textview.width,
-                x,y,this._textview._textview.height);
+                x,y,this._textview._textview.height, this._inverseWording.getValue());
                 
         } else {
 			if ($debug) Debug.write("text smaller then 0",this._textview._textview.getURLEncodedText());
@@ -137,12 +137,14 @@
 		//startAdjustHight is set to true later, cause otherwise update 
 		//Events would set the height to 
 		//text field default height
+		if ($debug) Debug.write("oninit this.refObj.isrtl ",this.refObj.isrtl);
 		this.refObj.letterObjectClose(this);
         var t = new lz.styleableInput(this._textview,{
 	                name:'_textview',text:this.inittext,
 	                fontstyle:this.refObj.currentlayerstyle,
 	                fontsize:this.refObj.currentlayersize,
-	                fgcolor:this.refObj.currentlayerletter
+	                fgcolor:this.refObj.currentlayerletter,
+	                isrtl:this.refObj.isrtl
                 });
         //if ( this.inittext.length==0 ) this.setAttribute('height',40);
 		if ( this.inittext.length!=0 ) {
@@ -165,12 +167,14 @@
         //if ($debug) Debug.write("callNew height-4 ",this.getHeight());
         
 		this._textview._textview.destroy();
+		if ($debug) Debug.write("callNew this.refObj.isrtl ",this.refObj.isrtl);
 		var t = new lz.styleableInput(this._textview,{
 			        setFocusOnInit:false,
                     name:'_textview',text:txxt,
                     fontstyle:this.refObj.currentlayerstyle,
                     fontsize:this.refObj.currentlayersize,
-                    fgcolor:this.refObj.currentlayerletter
+                    fgcolor:this.refObj.currentlayerletter,
+                    isrtl:this.refObj.isrtl
                 });
         this.setAttribute("height",h);
 	</method>
@@ -185,6 +189,21 @@
     
     <view name="_textview" width="${ parent.width }" height="${ parent.height }" />
     
+	<labelCheckbox name="_inverseWording" x="2" y="${ parent.height - this.height}" labelid="580">
+		<attribute name="doUpdate" value="false" type="boolean" />
+		<handler name="oninit">
+			this.setValue(parent.refObj.isrtl);
+			this.setAttribute('doUpdate', true);
+		</handler>
+		<handler name="onvalue" args="v">
+			if (this.doUpdate) {
+				parent.refObj.setAttribute('isrtl', this.getValue());
+				parent._textview._textview.setAttribute('isrtl', this.getValue());
+			}
+		</handler>
+		<labelTooltip labelid="581" />
+	</labelCheckbox>
+	
     <resizestate name="rs" >
     	<text x="2" y="2" text="${ 'w: '+parent.width+' h: '+parent.height }" bgcolor="white"/>
     </resizestate>
Index: WebContent/src/base/components/text/rtl.lzx
===================================================================
--- WebContent/src/base/components/text/rtl.lzx	(revision 0)
+++ WebContent/src/base/components/text/rtl.lzx	(working copy)
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one
+  or more contributor license agreements.  See the NOTICE file
+  distributed with this work for additional information
+  regarding copyright ownership.  The ASF licenses this file
+  to you under the Apache License, Version 2.0 (the
+  "License"); you may not use this file except in compliance
+  with the License.  You may obtain a copy of the License at
+  
+      http://www.apache.org/licenses/LICENSE-2.0
+    	  
+  Unless required by applicable law or agreed to in writing,
+  software distributed under the License is distributed on an
+  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  KIND, either express or implied.  See the License for the
+  specific language governing permissions and limitations
+  under the License.
+  
+-->
+<library>
+	<method name="rtl" args="txt">
+	<![CDATA[
+		var caret_i = Selection.getCaretIndex() - 1;
+		//if ($debug) Debug.write("caret_i: ", caret_i, "txt.charAt(caret_i): ", txt.charAt(caret_i));
+		if(txt.charAt(caret_i) == ' ') {
+			if(caret_i == txt.length - 1 || caret_i < txt.length - 1 && txt.charAt(caret_i+1) == ' ') {
+				//if ($debug) Debug.write("txt.substr(0, caret_i): ", txt.substr(0, caret_i));
+				//if ($debug) Debug.write("(caret_i < txt.length-1): ", (caret_i < txt.length-1));
+				//if ($debug) Debug.write("txt.slice(caret_i + 1, txt.length): ", txt.slice(caret_i + 1, txt.length));
+				txt = txt.substr(0, caret_i) + ((caret_i < txt.length - 1) ? txt.slice(caret_i + 1, txt.length) : "");
+				//if ($debug) Debug.write("remove whitespace: ", txt);
+			}
+			var found = false;
+			for(var i = caret_i - 1; i >= 0; i--) {
+				if(txt.charAt(i) == ' ') {
+					found = true;
+					txt = txt.slice(0, i) + " " + txt.slice(i + 1, txt.length)
+					//if ($debug) Debug.write("next word: ", i, txt);
+					Selection.setSelection(i, i);
+					break;
+				} else if(txt.charAt(i) == '\n' || txt.charAt(i) == '\r') {
+					found = true;
+					txt = txt.slice(0, i + 1) + " " + txt.slice(i + 1, txt.length)
+					Selection.setSelection(i + 1, i + 1);
+					break;
+				}
+			}
+			if(!found) {
+				txt = " " + txt;
+				Selection.setSelection(0, 0);
+			}
+		}
+	    return txt;
+	]]>
+	</method>
+</library>
\ No newline at end of file
